#!/usr/bin/env bash

################################################################################
#                     CostAlarm for Amazon Web Services                        #
#               Copyright (C) 2011 Shore Labs for costalarm.com                #
#                                                                              #
# Permission is hereby granted, free of charge, to any person obtaining a copy #
# of this software and associated documentation files (the "Software"), to deal#
# in the Software without restriction, including without limitation the rights #
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell    #
# copies of the Software, and to permit persons to whom the Software is        #
# furnished to do so, subject to the following conditions:                     #
#                                                                              #
# The above copyright notice and this permission notice shall be included in   #
# all copies or substantial portions of the Software.                          #
#                                                                              #
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR   #
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,     #
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE  #
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER       #
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,#
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN    #
# THE SOFTWARE.                                                                #
#                                                                              #
# Amazon Web Services and AWS are trademarks of Amazon.com, Inc. or its        #
# affiliates in the United States and/or other countries.                      #
#                                                                              #
################################################################################


function save {
  CONFIG_FILE="$HOME/.costalarmrc"
  CONFIG_CONTENT="AWS_USERNAME=\""$AWS_USERNAME"\"\\nAWS_PASSWORD=\""$AWS_PASSWORD"\"\\nAPI_TOKEN=\""$API_TOKEN"\""

  echo ""
  echo -e "\033[1mCostAlarm has been configured.\033[0m"
  echo "Would you like to save the following configuration to $CONFIG_FILE?"
  echo ""
  echo -e $CONFIG_CONTENT
  echo ""
  echo -n "Save the new configuration file? [Yn] "

  read -e SAVE_ANSWER
  case "$SAVE_ANSWER" in
    n*|N*)
      echo "Configuration file has been left unchanged."
      ;;
    *)
      echo -e $CONFIG_CONTENT > $CONFIG_FILE
      chmod 600 $CONFIG_FILE
      echo "Configuration file updated."
    ;;
  esac
}

function start {
  # Source global configuration file
  if [ -f /etc/costalarm/config ]
  then
    source /etc/costalarm/config
  fi

  # Source user configuration file
  if [ -f ~/.costalarmrc ]
  then
    source ~/.costalarmrc
  fi

  configureApiToken
  configureStatementImport
  save

  echo ""
  exit 0

}

function configureApiToken {
  echo ""
  echo -e "\033[1mAPI Token configuration\033[0m"
  echo "In order for scripts to communicate with costalarm.com you need to configure the API token."
  echo "You will find the API token under your costalarm.com account settings tab."
  echo ""
  echo -n "Please enter your costalarm.com account API token: "
  read -e NEW_API_TOKEN
  if  [ "$NEW_API_TOKEN" != "" ]; then
    API_TOKEN=$NEW_API_TOKEN
  fi
  echo ""
}

function configureStatementImport {  
  if [ -z $MAIN_ANSWER ]; then
    echo ""
    echo -e "\033[1mCost Reporting Agent\033[0m"
    echo "Cost Reporting Agent (costalarm-import script) is responsible for reading the latest AWS statement from aws.amazon.com and sending it to costalarm.com for processing."
    echo "Amazon login credintials which are being used through this process are stored on your computer only and are not transferred to the costalarm.com website"
    echo ""
    echo -n "Would you like to configure the Cost Reporting Agent? [Yn] "
    read -e MAIN_ANSWER
  fi
  
  case "$MAIN_ANSWER" in
  n*|N*)
    ;;
  *)
      configureAwsCredentials
      tryStatementImport
      if [ $? -ne 0 ]; then
        echo ""
        echo "AWS statement import has failed."
        echo -n "Would you like to try again with different credentials [Yn]? "
        read ANSWER_AGAIN
        case "$ANSWER_AGAIN" in
        n*|N*)
          ;;
        *)
          echo ""
          configureStatementImport
        ;;
        esac
      else
        tryAddingCronJob
      fi
  ;;
  esac
}

function configureAwsCredentials {
  echo -n "Please enter your Amazon username (email): "
  read -e AWS_USERNAME

  echo -n "Please enter your Amazon password: "
  read -s AWS_PASSWORD
  echo ""
}

function tryStatementImport {
  echo -n "Would you like to try the import now? [Yn] "
  read -e ANSWER
  
  case "$ANSWER" in
  n*|N*) ;;
  *)
    `dirname $0`/costalarm-import -u "$AWS_USERNAME" -p "$AWS_PASSWORD" -t "$API_TOKEN"
  ;;
  esac
}

function tryAddingCronJob {
  whereis cron > /dev/null
  if [ $? -eq 0 ]; then
    CRON_MIN=$RANDOM
    let "CRON_MIN %= 60"

    echo ""
    echo -e "\033[1mCost Reporting Agent statement import schedule\033[0m"
    echo "This setup script can install a cron job that will schedule automatic, hourly statement import."
    echo "The cron job will be added with the following parameters:"
    echo "$CRON_MIN * * * * /usr/local/bin/costalarm-import"
    echo ""
    echo -n "Would you like to add the cron job? [Yn]"
    read -e CRON_ANSWER
  
    case "$CRON_ANSWER" in
    n*|N*) ;;
    *)
      echo -e "`crontab -l`""\\n$CRON_MIN * * * * /usr/local/bin/costalarm-import" | crontab
      echo "Cron job added."
    ;;
    esac
  fi

}

#tryAddingCronJob
#configureStatementImport
start

